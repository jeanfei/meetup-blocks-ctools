<?php

/**
 * @file
 * Provides global helpers and features for meetup blocks websites.
 */


/**
 * Implements hook_menu().
 */
function meetup_blocks_core_menu() {
  $items['videos/%'] = array(
  // $items['videos/%video'] = array(
    'title' => 'Videos',
    'description' => 'Retrieves video youtube information.',
    'page callback' => 'meetup_blocks_core_video',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'weight' => -10,
    'file' => 'meetup_blocks_core.pages.inc',
  );

  return $items;
}


/**
 * Implements hook_block_info().
 */
function meetup_blocks_core_block_info() {
  $blocks['author']['info'] = t('Meetup - Blocks - Author information');
  $blocks['author']['cache'] = DRUPAL_CACHE_PER_PAGE;

  $blocks['statistics']['info'] = t('Meetup - Blocks - Statistics information');
  $blocks['statistics']['cache'] = DRUPAL_CACHE_PER_PAGE;

  $blocks['youtube']['info'] = t('Meetup - Blocks - See more in youtube');
  $blocks['youtube']['cache'] = DRUPAL_CACHE_PER_PAGE;

  $blocks['video_list_drupalfacile']['info'] = t('Meetup - Blocks - Drupal Facile videos list');
  $blocks['video_list_drupalfacile']['cache'] = DRUPAL_CACHE_GLOBAL;

  $blocks['video_list_goldenmoustachevideo']['info'] = t('Meetup - Blocks - GoldenMoustacheVideo videos list');
  $blocks['video_list_goldenmoustachevideo']['cache'] = DRUPAL_CACHE_GLOBAL;

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function meetup_blocks_core_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'author':
      // dd('Generate author block');
      $video_id = check_plain(arg(1)); // hard coding position argument

      $youtube = meetup_blocks_core_video_load($video_id);
      $author = $youtube->getAuthor();
      $author_id = $youtube->getAuthorId();
      $videos_link = l($author_id, $youtube->getVideosUrlOfAuthor());

      $block['subject'] = t('Author information');
      $block['content'] = $author . ' (' . $videos_link . ' )';
      break;

    case 'statistics':
      // dd('Generate statistics block');
      $video_id = check_plain(arg(1)); // hard coding position argument

      $youtube = meetup_blocks_core_video_load($video_id);
      $view_count = $youtube->getViewCount();
      $num_likes = $youtube->getNumLikes();

      $block['subject'] = t('Statistics information');
      $block['content'] = '<p>' . $view_count . ' viewed</p>';
      $block['content'] .= '<p>' . $num_likes . ' likes</p>';
      break;

    case 'youtube':
      // dd('Generate youtube block');
      $video_id = check_plain(arg(1)); // hard coding position argument

      $youtube = meetup_blocks_core_video_load($video_id);
      $videos_link = l('See this video on Youtube', $youtube->getVideosUrl());

      $block['subject'] = t('See more');
      $block['content'] = $videos_link;
      break;

    case 'video_list_drupalfacile':
      // dd('Generate Drupal facile video list');

      $params = array();
      $params['author'] = 'DrupalFacile';
      $youtube = new Drupal\youtube_api\YoutubeVideoList($params);
      $videos = $youtube->getVideos();

      $block['subject'] = t('Drupal Facile videos list');
      $block['content'] = theme('item_list', array('items' => $videos));
      break;

    case 'video_list_goldenmoustachevideo':
      // dd('Generate GoldenMoustacheVideo video list');

      $params = array();
      $params['author'] = 'GoldenMoustacheVideo';
      $youtube = new Drupal\youtube_api\YoutubeVideoList($params);
      $videos = $youtube->getVideos();

      $block['subject'] = t('GoldenMoustacheVideo videos list');
      $block['content'] = theme('item_list', array('items' => $videos));
      break;
  }
  return $block;
}


/**
 * Get the entity controller class for an entity type.
 */
function meetup_blocks_core_video_load($video_id) {
  $videos = &drupal_static(__FUNCTION__, array());
  if (!isset($videos[$video_id])) {
    $params = array();
    $params['id'] = $video_id;
    $youtube = new Drupal\youtube_api\YoutubeVideo($params);
    $videos[$video_id] = $youtube;
  }
  return $videos[$video_id];
}


// function video_load($video_id) {
//   $params = array();
//   $params['id'] = $video_id;
//   $youtube = new Drupal\youtube_api\YoutubeVideo($params);
//   return $youtube;
// }

